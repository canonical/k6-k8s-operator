# This file configures Charmcraft.
# See https://juju.is/docs/sdk/charmcraft-config for guidance.

name: k6-k8s
type: charm
assumes:
  - k8s-api
  - juju >= 3.6.2  # it's LTS and we want remote-model-get

summary: A modern load testing tool, using Go and JavaScript.
description: >
  Grafana k6 is an open-source, developer-friendly, and extensible load testing tool.
  k6 allows you to prevent performance issues and proactively improve reliability.

links:
  website: https://charmhub.io/k6-k8s
  source: https://github.com/canonical/k6-k8s-operator
  issues: https://github.com/canonical/k6-k8s-operator/issues
  documentation: https://discourse.charmhub.io/

platforms:
  ubuntu@24.04:amd64:
  ubuntu@24.04:arm64:

parts:
  charm:
    source: .
    plugin: uv
    build-packages: [git]
    build-snaps: [astral-uv]
    override-build: |
      craftctl default
      git describe --always > $CRAFT_PART_INSTALL/version

containers:
  k6:
    resource: k6-image

resources:
  k6-image:
    type: oci-image
    description: OCI image for k6
    upstream-source: ubuntu/xk6:0-24.04

peers:
  k6:
    interface: k6_peers
    description: >
      Peer relation used by the leader to control all k6 units.

config:
  options:
    load-test:
      type: string
      required: false
      description: >
        A standalone k6 script that can be executed via `k6 run`.
        See examples in https://grafana.com/docs/k6/latest/examples/
        The value of this config option is used to by the `run` charm action.
    environment:
      type: string
      required: false
      description: >
        A comma-separated list of environment variables to be used by k6 scripts.
        These will override any variables passed over relation data.
        Example:
          `juju config k6 environment "ENDPOINT='http://...',FOO=bar,BAZ=42"`

actions:
  start:
    description: >
      Run a load test script. Currently, this only supports scripts
      provided via `juju config`.
      This action must be run on the leader unit.
    properties:
      app:
        description: >
          Name of the app providing the tests.
          Currently, only in-model relations are supported.
        type: string
      test:
        description: >
          Name of the test to run (its filename).
        type: string
  stop:
    description: Stop k6 if it's currently running.
  list:
    description: List currently available k6 scripts.

provides:
  provide-cmr-mesh:
    interface: cross_model_mesh
    description: |
      If this app is generating polciies to provide access to related applications that are cross-model, relate that app to this additional relation to retrieve additional data required for these policies.  This is required because Juju does not natively provide all information required to build these policies when related cross-model.

requires:
  send-remote-write:
    interface: prometheus_remote_write
    limit: 1
    description: >
      Send the results from `k6` load tests to a Prometheus-remote-write-compatible
      endpoint. `k6` can only send results to one endpoint, hence the limit: 1. 
  logging:
    interface: loki_push_api
    limit: 1
    description: >
      Send the logs from 'k6' load tests to a Loki-compatible endpoint.
      `k6` can only send results to one endpoint, hence the limit: 1.
  receive-k6-tests:
    interface: k6_tests
    description: >
      Receive load tests from other charms.
  service-mesh:
    limit: 1
    interface: service_mesh
    description: |
      Integrate this charm into a service mesh.
  require-cmr-mesh:
    interface: cross_model_mesh
    description: |
      If this app relates to other applications on a charmed service mesh cross-model, use this relation to send that related app additional data needed to automatically generate traffic authorization policies.  This is required because Juju does not natively provide all information required to build these policies when related cross-model.
